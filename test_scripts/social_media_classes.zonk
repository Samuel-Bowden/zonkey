function print_split() {
	println("------------");
}

class Pet {
	String type;
	String name;
	Integer age;

	constructor(String type, String name, Integer age) {
		@type = type;
		@name = name;
		@age = age;
	}

	method print() {
		println("  Type: " + @type);
		println("  Name: " + @name);
		println("  Age: " + (String @age));
	}
}

class Profile {
	String name;
	Integer age;
	Boolean public;
	Integer views;
	Pet pet;
	Boolean owns_pet;

	constructor(String name, Integer age, Boolean public) {
		@name = name;
		@age = age;
		@public = public;
	}

	method view() {
		if (@public) {
			@views += 1;
		}
	}
	
	method add_pet(Pet pet) {
		@pet = pet;
		@owns_pet = true;
	}

	method trending() -> String {
		if (@views > 100) {
			return " (Trending):";
		} else {
			return ":";
		}
	}
	
	method show() {
		self.view();

		if (@public) {
			println(@name + "'s Profile" + self.trending());
			println(" Age: " + (String @age));
			println(" Views: " + (String @views));
			if (@owns_pet) {
				println(" Pet:");
				@pet.print();
			}
		} else {
			println("Sorry, but " + @name + "'s profile is private!");
		}

		print_split();
	}
}

# A function which simulates n amount of people viewing the profile
function simulate_profile_views(Profile p, Integer views) {
	for (Integer i = 0, i < views, i += 1) {
		p.view();
	}
}

start {
	println("Welcome to the social media platform for pet owners!");	

	println("Current profiles:");
	print_split();

	# Create profiles
	let sam = Profile("Sam", 21, true);

	let steve = Profile("Steve", 34, true);
	sam.add_pet(Pet("Dog", "Jack", 5));

	let bert = Profile("Bert", 54, false);

	let sally = Profile("Sally", 87, true);
	sally.add_pet(Pet("Tortoise", "Shelly", 96));

	# Make Sam's profile very popular
	simulate_profile_views(sam, 123);

	# Make Shelly's profile less popular
	simulate_profile_views(sally, 53);

	# Show profiles
	sam.show();
	steve.show();
	bert.show();
	sally.show();
}
