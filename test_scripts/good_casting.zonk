# Script to test all casts available in Zonkey

function expected_integer(Integer expected, Integer value) {
	cli:print("Expected integer " + (String expected) + ", got integer " + (String value));

	if (expected == value) {
		cli:println(" - Passed");
	} else {
		cli:println(" - Failed");
	}
}

function expected_float(Float expected, Float value) {
	cli:print("Expected float " + (String expected) + ", got float " + (String value));

	if (expected == value) {
		cli:println(" - Passed");
	} else {
		cli:println(" - Failed");
	}
}

function expected_boolean(Boolean expected, Boolean value) {
	cli:print("Expected boolean " + (String expected) + ", got boolean " + (String value));

	if (expected == value) {
		cli:println(" - Passed");
	} else {
		cli:println(" - Failed");
	}
}

function expected_string(String expected, String value) {
	cli:print("Expected string " + expected + ", got string " + value);

	if (expected == value) {
		cli:println(" - Passed");
	} else {
		cli:println(" - Failed");
	}
}

function integer_casts() {
	cli:println("-----Integer casts-----");

	# Integer -> Float
	expected_float(657.0, (Float 657));

	# Integer -> Boolean (int != 0)
	expected_boolean(true, (Boolean 2));
	expected_boolean(false, (Boolean 0));
	expected_boolean(true, (Boolean -192));

	# Integer -> String
	expected_string("54820", (String 54820));
}

function float_casts() {
	cli:println("-----Float casts-----");

	# Float -> Integer (drop after decimal place)
	expected_integer(7548, (Integer 7548.123));
	expected_integer(194, (Integer 194.989));

	# Float -> Boolean (float != 0)
	expected_boolean(true, (Boolean 2.123));
	expected_boolean(false, (Boolean 0.));
	expected_boolean(true, (Boolean 0.12));
	expected_boolean(true, (Boolean -192.4354));

	# Float -> String
	expected_string("209384.545432", (String 209384.545432));
}

function string_casts() {
	cli:println("-----String casts-----");

	# String -> Integer (potential for error)
	expected_integer(15, (Integer "15"));

	# String -> Float (potential for error)
	expected_float(67.28, (Float "67.28"));

	# String -> Boolean (potential for error)
	expected_boolean(false, (Boolean "false"));
}

function boolean_casts() {
	cli:println("-----Boolean casts-----");

	# Boolean -> Integer
	expected_integer(1, (Integer true));
	expected_integer(0, (Integer false));

	# Boolean -> Float
	expected_float(1., (Float true));
	expected_float(0., (Float false));

	# Boolean -> String
	expected_string("true", (String true));
	expected_string("false", (String false));
}

start {
	integer_casts();
	float_casts();
	string_casts();
	boolean_casts();
}
