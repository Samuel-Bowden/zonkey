Running C++
g++ (GCC) 12.2.1 20230201
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


 Performance counter stats for './fibonacci' (10 runs):

          8,341.57 msec task-clock:u                     #    9.995 CPUs utilized               ( +-  9.60% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
             1,206      page-faults:u                    #  263.340 /sec                        ( +-  9.57% )
    14,261,221,640      cycles:u                         #    3.114 GHz                         ( +-  9.58% )
       489,005,853      stalled-cycles-frontend:u        #    6.22% frontend cycles idle        ( +-  9.62% )
       591,986,945      stalled-cycles-backend:u         #    7.53% backend cycles idle         ( +-  9.56% )
    31,559,917,239      instructions:u                   #    4.02  insn per cycle
                                                  #    0.01  stalled cycles per insn     ( +-  9.57% )
     5,966,305,513      branches:u                       #    1.303 G/sec                       ( +-  9.57% )
        82,191,865      branch-misses:u                  #    2.50% of all branches             ( +-  9.57% )

           0.83454 +- 0.00248 seconds time elapsed  ( +-  0.30% )

-----
Running Python
Python 3.10.10

 Performance counter stats for 'python fibonacci.py' (10 runs):

         12,152.35 msec task-clock:u                     #    9.996 CPUs utilized               ( +-  9.58% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
             8,981      page-faults:u                    #    1.344 K/sec                       ( +-  9.58% )
    52,452,883,039      cycles:u                         #    7.851 GHz                         ( +-  9.58% )
       836,469,031      stalled-cycles-frontend:u        #    2.90% frontend cycles idle        ( +-  9.42% )
    19,091,198,311      stalled-cycles-backend:u         #   66.18% backend cycles idle         ( +-  9.59% )
   156,547,230,353      instructions:u                   #    5.43  insn per cycle
                                                  #    0.07  stalled cycles per insn     ( +-  9.58% )
    30,957,196,728      branches:u                       #    4.634 G/sec                       ( +-  9.58% )
        84,499,699      branch-misses:u                  #    0.50% of all branches             ( +-  9.57% )

           1.21575 +- 0.00319 seconds time elapsed  ( +-  0.26% )

-----
Running JavaScript (Deno)
deno 1.33.0 (release, x86_64-unknown-linux-gnu)
v8 11.4.183.1
typescript 5.0.3

 Performance counter stats for 'deno run fibonacci.js' (10 runs):

         34,463.80 msec task-clock:u                     #   10.073 CPUs utilized               ( +-  9.54% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
            60,640      page-faults:u                    #    3.206 K/sec                       ( +-  9.57% )
   120,621,779,919      cycles:u                         #    6.377 GHz                         ( +-  9.55% )
     1,307,495,123      stalled-cycles-frontend:u        #    1.98% frontend cycles idle        ( +-  9.48% )
    15,892,830,870      stalled-cycles-backend:u         #   24.05% backend cycles idle         ( +-  9.55% )
   283,175,219,425      instructions:u                   #    4.29  insn per cycle
                                                  #    0.03  stalled cycles per insn     ( +-  9.57% )
    65,399,333,455      branches:u                       #    3.457 G/sec                       ( +-  9.57% )
       118,610,922      branch-misses:u                  #    0.33% of all branches             ( +-  9.37% )

            3.4215 +- 0.0193 seconds time elapsed  ( +-  0.56% )

-----
Running JavaScript (Bun)
0.5.9

 Performance counter stats for 'bun run fibonacci.js' (10 runs):

         11,206.25 msec task-clock:u                     #   10.038 CPUs utilized               ( +-  9.57% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
            13,684      page-faults:u                    #    2.220 K/sec                       ( +-  9.59% )
    25,667,931,813      cycles:u                         #    4.164 GHz                         ( +-  9.57% )
       392,088,701      stalled-cycles-frontend:u        #    2.78% frontend cycles idle        ( +-  9.61% )
     6,107,497,387      stalled-cycles-backend:u         #   43.34% backend cycles idle         ( +-  9.55% )
    61,553,256,230      instructions:u                   #    4.37  insn per cycle
                                                  #    0.05  stalled cycles per insn     ( +-  9.57% )
     9,550,800,276      branches:u                       #    1.549 G/sec                       ( +-  9.57% )
       120,688,417      branch-misses:u                  #    2.30% of all branches             ( +-  9.58% )

           1.11636 +- 0.00315 seconds time elapsed  ( +-  0.28% )

-----
Running Zonkey
zonkey 1.0.1

 Performance counter stats for 'zonkey run fibonacci.zonk' (10 runs):

          5,478.19 msec task-clock:u                     #    9.985 CPUs utilized               ( +-  9.57% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
            21,601      page-faults:u                    #    7.163 K/sec                       ( +-  9.46% )
    23,137,388,904      cycles:u                         #    7.672 GHz                         ( +-  9.57% )
       223,244,304      stalled-cycles-frontend:u        #    1.75% frontend cycles idle        ( +-  9.76% )
     2,616,583,343      stalled-cycles-backend:u         #   20.55% backend cycles idle         ( +-  9.54% )
    57,239,022,513      instructions:u                   #    4.50  insn per cycle
                                                  #    0.03  stalled cycles per insn     ( +-  9.57% )
     9,757,813,534      branches:u                       #    3.236 G/sec                       ( +-  9.57% )
       152,274,810      branch-misses:u                  #    2.84% of all branches             ( +-  9.57% )

           0.54864 +- 0.00145 seconds time elapsed  ( +-  0.26% )
