Running C++
g++ (GCC) 12.2.1 20230201
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


 Performance counter stats for './hello_world' (100 runs):

             77.67 msec task-clock:u                     #   80.343 CPUs utilized               ( +-  2.85% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
            12,248      page-faults:u                    #  304.298 K/sec                       ( +-  2.90% )
       171,233,271      cycles:u                         #    4.254 GHz                         ( +-  2.90% )
         5,320,840      stalled-cycles-frontend:u        #    6.17% frontend cycles idle        ( +-  2.90% )
        72,142,953      stalled-cycles-backend:u         #   83.64% backend cycles idle         ( +-  2.90% )
       249,369,277      instructions:u                   #    2.89  insn per cycle
                                                  #    0.15  stalled cycles per insn     ( +-  2.90% )
        43,088,087      branches:u                       #    1.071 G/sec                       ( +-  2.90% )
         1,314,105      branch-misses:u                  #    6.04% of all branches             ( +-  2.90% )

         0.0009668 +- 0.0000199 seconds time elapsed  ( +-  2.06% )

-----
Running Python
Python 3.10.10

 Performance counter stats for 'python hello_world.py' (100 runs):

          1,190.94 msec task-clock:u                     #   95.827 CPUs utilized               ( +-  2.90% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
            86,909      page-faults:u                    #  144.360 K/sec                       ( +-  2.90% )
     4,102,757,478      cycles:u                         #    6.815 GHz                         ( +-  2.90% )
       118,977,314      stalled-cycles-frontend:u        #    5.74% frontend cycles idle        ( +-  2.90% )
       867,067,562      stalled-cycles-backend:u         #   41.86% backend cycles idle         ( +-  2.90% )
     5,961,257,811      instructions:u                   #    2.88  insn per cycle
                                                  #    0.07  stalled cycles per insn     ( +-  2.90% )
     1,267,400,966      branches:u                       #    2.105 G/sec                       ( +-  2.90% )
        43,654,608      branch-misses:u                  #    6.82% of all branches             ( +-  2.90% )

         0.0124280 +- 0.0000467 seconds time elapsed  ( +-  0.38% )

-----
Running JavaScript (Deno)
deno 1.33.0 (release, x86_64-unknown-linux-gnu)
v8 11.4.183.1
typescript 5.0.3

 Performance counter stats for 'deno run hello_world.js' (100 runs):

          2,247.09 msec task-clock:u                     #  108.599 CPUs utilized               ( +-  2.90% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
           384,994      page-faults:u                    #  338.148 K/sec                       ( +-  2.90% )
     4,778,521,979      cycles:u                         #    4.197 GHz                         ( +-  2.90% )
       161,372,824      stalled-cycles-frontend:u        #    6.68% frontend cycles idle        ( +-  2.88% )
     1,712,651,570      stalled-cycles-backend:u         #   70.84% backend cycles idle         ( +-  2.91% )
     8,725,256,926      instructions:u                   #    3.61  insn per cycle
                                                  #    0.10  stalled cycles per insn     ( +-  2.90% )
     1,281,017,373      branches:u                       #    1.125 G/sec                       ( +-  2.90% )
        24,539,611      branch-misses:u                  #    3.79% of all branches             ( +-  2.90% )

         0.0206916 +- 0.0000539 seconds time elapsed  ( +-  0.26% )

-----
Running JavaScript (Bun)
0.5.9

 Performance counter stats for 'bun run hello_world.js' (100 runs):

            967.02 msec task-clock:u                     #   96.970 CPUs utilized               ( +-  2.90% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
           104,965      page-faults:u                    #  213.636 K/sec                       ( +-  2.90% )
     1,582,612,910      cycles:u                         #    3.221 GHz                         ( +-  2.90% )
       112,500,706      stalled-cycles-frontend:u        #   14.05% frontend cycles idle        ( +-  2.89% )
       385,151,410      stalled-cycles-backend:u         #   48.11% backend cycles idle         ( +-  2.90% )
     1,426,498,093      instructions:u                   #    1.78  insn per cycle
                                                  #    0.14  stalled cycles per insn     ( +-  2.90% )
       280,620,945      branches:u                       #  571.149 M/sec                       ( +-  2.90% )
        12,137,300      branch-misses:u                  #    8.57% of all branches             ( +-  2.91% )

         0.0099723 +- 0.0000599 seconds time elapsed  ( +-  0.60% )

-----
Running Zonkey
zonkey 1.0.1

 Performance counter stats for 'zonkey run hello_world.zonk' (100 runs):

            249.29 msec task-clock:u                     #   89.441 CPUs utilized               ( +-  2.90% )
                 0      context-switches:u               #    0.000 /sec
                 0      cpu-migrations:u                 #    0.000 /sec
            42,925      page-faults:u                    #  343.375 K/sec                       ( +-  2.90% )
       326,443,480      cycles:u                         #    2.611 GHz                         ( +-  2.90% )
        15,597,282      stalled-cycles-frontend:u        #    9.47% frontend cycles idle        ( +-  2.90% )
       143,810,729      stalled-cycles-backend:u         #   87.29% backend cycles idle         ( +-  2.90% )
       337,527,718      instructions:u                   #    2.05  insn per cycle
                                                  #    0.22  stalled cycles per insn     ( +-  2.90% )
        65,293,084      branches:u                       #  522.307 M/sec                       ( +-  2.90% )
         2,265,848      branch-misses:u                  #    6.87% of all branches             ( +-  2.91% )

         0.0027872 +- 0.0000264 seconds time elapsed  ( +-  0.95% )

-----
